{{- if .Values.sabnzbd.enabled -}}
---
### CONFIGMAP
## INIT-CONTAINER
apiVersion: v1
data:
  init-sabnzbd.sh: |
    #!/bin/bash
    echo "### Initializing config ###"
    if [ ! -f /sabnzbd-config/settings.json ]; then
      cp -n /init-sabnzbd/sabnzbd.ini /sabnzbd-config/sabnzbd.ini
      echo "### No configuration found, intialized with default settings ###"
    fi
  sabnzbd.ini: |
    __version__ = 19
    __encoding__ = utf-8
    [misc]
    pre_script = None
    queue_complete = ""
    queue_complete_pers = 0
    bandwidth_perc = 100
    refresh_rate = 0
    interface_settings = ""
    queue_limit = 20
    config_lock = 0
    sched_converted = 0
    notified_new_skin = 0
    direct_unpack_tested = 0
    check_new_rel = 1
    auto_browser = 1
    language = en
    enable_https_verification = 1
    host = ::
    port = 8080
    https_port = ""
    username = ""
    password = ""
    bandwidth_max = ""
    cache_limit = 1G
    web_dir = Glitter
    web_color = ""
    https_cert = server.cert
    https_key = server.key
    https_chain = ""
    enable_https = 0
    inet_exposure = 0
    api_key = 7a50bedb4f764603bab47212c7a16ec4
    nzb_key = c7378d3a9b024117baacb21de005b1a6
    permissions = ""
    download_dir = /{{ .Values.general.storage.subPaths.downloads }}/{{ .Values.general.storage.subPaths.sabnzbd }}/incomplete
    download_free = ""
    complete_dir = /{{ .Values.general.storage.subPaths.downloads }}/{{ .Values.general.storage.subPaths.sabnzbd }}/complete
    complete_free = ""
    fulldisk_autoresume = 0
    script_dir = ""
    nzb_backup_dir = ""
    admin_dir = admin
    dirscan_dir = ""
    dirscan_speed = 5
    password_file = ""
    log_dir = logs
    max_art_tries = 3
    load_balancing = 2
    top_only = 0
    sfv_check = 1
    quick_check_ext_ignore = nfo, sfv, srr
    script_can_fail = 0
    enable_recursive = 1
    flat_unpack = 0
    par_option = ""
    pre_check = 0
    nice = ""
    win_process_prio = 3
    ionice = ""
    fail_hopeless_jobs = 1
    fast_fail = 1
    auto_disconnect = 1
    no_dupes = 0
    no_series_dupes = 0
    series_propercheck = 1
    pause_on_pwrar = 1
    ignore_samples = 0
    deobfuscate_final_filenames = 0
    auto_sort = ""
    direct_unpack = 0
    direct_unpack_threads = 3
    propagation_delay = 0
    folder_rename = 1
    replace_spaces = 0
    replace_dots = 0
    safe_postproc = 1
    pause_on_post_processing = 0
    enable_all_par = 0
    sanitize_safe = 0
    cleanup_list = ,
    unwanted_extensions = ,
    action_on_unwanted_extensions = 0
    unwanted_extensions_mode = 0
    new_nzb_on_failure = 0
    history_retention = 0
    enable_meta = 1
    quota_size = ""
    quota_day = ""
    quota_resume = 0
    quota_period = m
    rating_enable = 0
    rating_host = ""
    rating_api_key = ""
    rating_filter_enable = 0
    rating_filter_abort_audio = 0
    rating_filter_abort_video = 0
    rating_filter_abort_encrypted = 0
    rating_filter_abort_encrypted_confirm = 0
    rating_filter_abort_spam = 0
    rating_filter_abort_spam_confirm = 0
    rating_filter_abort_downvoted = 0
    rating_filter_abort_keywords = ""
    rating_filter_pause_audio = 0
    rating_filter_pause_video = 0
    rating_filter_pause_encrypted = 0
    rating_filter_pause_encrypted_confirm = 0
    rating_filter_pause_spam = 0
    rating_filter_pause_spam_confirm = 0
    rating_filter_pause_downvoted = 0
    rating_filter_pause_keywords = ""
    enable_tv_sorting = 0
    tv_sort_string = ""
    tv_categories = tv,
    enable_movie_sorting = 0
    movie_sort_string = ""
    movie_sort_extra = -cd%1
    movie_extra_folder = 0
    movie_categories = movies,
    enable_date_sorting = 0
    date_sort_string = ""
    date_categories = tv,
    schedlines = ,
    rss_rate = 60
    ampm = 0
    replace_illegal = 1
    start_paused = 0
    enable_par_cleanup = 1
    process_unpacked_par2 = 1
    enable_unrar = 1
    enable_unzip = 1
    enable_7zip = 1
    enable_filejoin = 1
    enable_tsjoin = 1
    overwrite_files = 0
    ignore_unrar_dates = 0
    backup_for_duplicates = 1
    empty_postproc = 0
    wait_for_dfolder = 0
    rss_filenames = 0
    api_logging = 1
    html_login = 1
    osx_menu = 1
    osx_speed = 1
    warn_dupl_jobs = 1
    helpfull_warnings = 1
    keep_awake = 1
    win_menu = 1
    allow_incomplete_nzb = 0
    enable_broadcast = 1
    ipv6_hosting = 0
    fixed_ports = 1
    api_warnings = 1
    disable_api_key = 0
    no_penalties = 0
    x_frame_options = 1
    require_modern_tls = 0
    num_decoders = 3
    rss_odd_titles = nzbindex.nl/, nzbindex.com/, nzbclub.com/
    req_completion_rate = 100.2
    selftest_host = self-test.sabnzbd.org
    movie_rename_limit = 100M
    episode_rename_limit = 20M
    size_limit = 0
    show_sysload = 2
    history_limit = 10
    wait_ext_drive = 5
    max_foldername_length = 246
    nomedia_marker = ""
    ipv6_servers = 1
    url_base = /sabnzbd
    host_whitelist = {{ .Values.general.ingress_host }}
    local_ranges = ,
    max_url_retries = 10
    downloader_sleep_time = 10
    ssdp_broadcast_interval = 15
    email_server = ""
    email_to = ,
    email_from = ""
    email_account = ""
    email_pwd = ""
    email_endjob = 0
    email_full = 0
    email_dir = ""
    email_rss = 0
    email_cats = *,
    [logging]
    log_level = 1
    max_log_size = 5242880
    log_backups = 5
    [ncenter]
    ncenter_enable = 0
    ncenter_cats = *,
    ncenter_prio_startup = 1
    ncenter_prio_download = 0
    ncenter_prio_pause_resume = 0
    ncenter_prio_pp = 0
    ncenter_prio_complete = 1
    ncenter_prio_failed = 1
    ncenter_prio_disk_full = 1
    ncenter_prio_new_login = 0
    ncenter_prio_warning = 0
    ncenter_prio_error = 0
    ncenter_prio_queue_done = 1
    ncenter_prio_other = 1
    [acenter]
    acenter_enable = 0
    acenter_cats = *,
    acenter_prio_startup = 0
    acenter_prio_download = 0
    acenter_prio_pause_resume = 0
    acenter_prio_pp = 0
    acenter_prio_complete = 1
    acenter_prio_failed = 1
    acenter_prio_disk_full = 1
    acenter_prio_new_login = 0
    acenter_prio_warning = 0
    acenter_prio_error = 0
    acenter_prio_queue_done = 1
    acenter_prio_other = 1
    [ntfosd]
    ntfosd_enable = 1
    ntfosd_cats = *,
    ntfosd_prio_startup = 1
    ntfosd_prio_download = 0
    ntfosd_prio_pause_resume = 0
    ntfosd_prio_pp = 0
    ntfosd_prio_complete = 1
    ntfosd_prio_failed = 1
    ntfosd_prio_disk_full = 1
    ntfosd_prio_new_login = 0
    ntfosd_prio_warning = 0
    ntfosd_prio_error = 0
    ntfosd_prio_queue_done = 1
    ntfosd_prio_other = 1
    [prowl]
    prowl_enable = 0
    prowl_cats = *,
    prowl_apikey = ""
    prowl_prio_startup = -3
    prowl_prio_download = -3
    prowl_prio_pause_resume = -3
    prowl_prio_pp = -3
    prowl_prio_complete = 0
    prowl_prio_failed = 1
    prowl_prio_disk_full = 1
    prowl_prio_new_login = -3
    prowl_prio_warning = -3
    prowl_prio_error = -3
    prowl_prio_queue_done = 0
    prowl_prio_other = 0
    [pushover]
    pushover_token = ""
    pushover_userkey = ""
    pushover_device = ""
    pushover_emergency_expire = 3600
    pushover_emergency_retry = 60
    pushover_enable = 0
    pushover_cats = *,
    pushover_prio_startup = -3
    pushover_prio_download = -2
    pushover_prio_pause_resume = -2
    pushover_prio_pp = -3
    pushover_prio_complete = -1
    pushover_prio_failed = -1
    pushover_prio_disk_full = 1
    pushover_prio_new_login = -3
    pushover_prio_warning = 1
    pushover_prio_error = 1
    pushover_prio_queue_done = -1
    pushover_prio_other = -1
    [pushbullet]
    pushbullet_enable = 0
    pushbullet_cats = *,
    pushbullet_apikey = ""
    pushbullet_device = ""
    pushbullet_prio_startup = 0
    pushbullet_prio_download = 0
    pushbullet_prio_pause_resume = 0
    pushbullet_prio_pp = 0
    pushbullet_prio_complete = 1
    pushbullet_prio_failed = 1
    pushbullet_prio_disk_full = 1
    pushbullet_prio_new_login = 0
    pushbullet_prio_warning = 0
    pushbullet_prio_error = 0
    pushbullet_prio_queue_done = 0
    pushbullet_prio_other = 1
    [nscript]
    nscript_enable = 0
    nscript_cats = *,
    nscript_script = ""
    nscript_parameters = ""
    nscript_prio_startup = 1
    nscript_prio_download = 0
    nscript_prio_pause_resume = 0
    nscript_prio_pp = 0
    nscript_prio_complete = 1
    nscript_prio_failed = 1
    nscript_prio_disk_full = 1
    nscript_prio_new_login = 0
    nscript_prio_warning = 0
    nscript_prio_error = 0
    nscript_prio_queue_done = 1
    nscript_prio_other = 1
kind: ConfigMap
metadata:
  name: init-sabnzbd-cm
---
### CONFIGMAP
## APPLICATION
apiVersion: v1
kind: ConfigMap
metadata:
  name: sabnzbd-config
data:
  PGID: "{{ .Values.general.pgid }}"
  PUID: "{{ .Values.general.puid }}"
---
### DEPLOYMENT
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sabnzbd
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
spec:
  strategy:
    type: Recreate
  replicas: 1
  selector:
    matchLabels:
      {{- include "k8s-mediaserver.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "k8s-mediaserver.selectorLabels" . | nindent 8 }}
        app: sabnzbd
    spec:
      initContainers:
        - name: config-sabnzbd
          image: docker.io/ubuntu:groovy
          command: ["/init-sabnzbd/init-sabnzbd.sh"]
          volumeMounts:
            - mountPath: /init-sabnzbd
              name: init-files-sabnzbd
          {{- if .Values.sabnzbd.volume }}
            - name: {{ .Values.sabnzbd.volume.name }}
              mountPath: /sabnzbd-config
          {{- else }}
            - name: mediaserver-volume
              mountPath: "/sabnzbd-config"
              subPath: "{{ .Values.general.storage.subPaths.config }}/sabnzbd"
          {{- end }}
          securityContext:
            runAsUser: {{ .Values.general.puid }}
            runAsGroup: {{ .Values.general.pgid }}
      containers:
        - name: {{ .Chart.Name }}
          envFrom:
            - configMapRef:
                name: sabnzbd-config
          image: "{{ .Values.sabnzbd.container.image }}:{{ .Values.sabnzbd.container.tag | default .Values.general.image_tag }}"
          imagePullPolicy: Always
          readinessProbe:
            httpGet:
              path: "{{ .Values.sabnzbd.ingress.path }}/wizard/"
              port: {{ .Values.sabnzbd.container.port.http }}
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 20
          ports:
            - name: sabnzbd-http
              containerPort: {{ .Values.sabnzbd.container.port.http }}
              protocol: TCP
            - name: sabnzbd-https
              containerPort: {{ .Values.sabnzbd.container.port.https }}
              protocol: TCP
          volumeMounts:
          {{- if .Values.sabnzbd.volume }}
            - name: {{ .Values.sabnzbd.volume.name }}
              mountPath: /config
          {{- else }}
            - name: mediaserver-volume
              mountPath: "/config"
              subPath: "{{ .Values.general.storage.subPaths.config }}/sabnzbd"
          {{- end }}
            - name: mediaserver-volume
              mountPath: "/downloads"
              subPath: "{{ .Values.general.storage.subPaths.downloads }}"
          {{- with .Values.sabnzbd.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        {{- if not .Values.general.storage.customVolume }}
        - name: mediaserver-volume
          persistentVolumeClaim:
            claimName: {{ .Values.general.storage.pvcName }}
        {{- else }}
        - name: mediaserver-volume
          {{- toYaml .Values.general.storage.volumes | nindent 10 }}
        {{- end }}
        {{- if .Values.sabnzbd.volume }}
        - name: {{ .Values.sabnzbd.volume.name }}
          persistentVolumeClaim:
            claimName: {{ .Values.sabnzbd.volume.name }}
        {{- end }}
        - name: init-files-sabnzbd
          configMap:
            defaultMode: 493
            name: init-sabnzbd-cm
      {{- with merge .Values.sabnzbd.container.nodeSelector .Values.general.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- if eq .Values.general.podDistribution "cluster" }}
      affinity:
        podAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app.kubernetes.io/instance
                  operator: In
                  values:
                  - {{ .Release.Name }}
              topologyKey: "kubernetes.io/hostname"
            weight: 100
      {{- else if eq .Values.general.podDistribution "spread" }}
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: "kubernetes.io/hostname"
        whenUnsatisfiable: "ScheduleAnyway"
        labelSelector:
          matchLabels:
            app.kubernetes.io/instance: {{ .Release.Name }}
      {{- end }}
---
### SERVICES
apiVersion: v1
kind: Service
metadata:
  name: sabnzbd
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
spec:
  type: {{ .Values.sabnzbd.service.http.type }}
  ports:
    - port: {{ .Values.sabnzbd.service.http.port }}
      targetPort: {{ .Values.sabnzbd.container.port.http }}
      protocol: TCP
      name: sabnzbd-http
{{ if eq .Values.sabnzbd.service.http.type "NodePort" }}
      nodePort: {{ .Values.sabnzbd.service.http.nodePort }}
{{ end }}
  selector:
    app: sabnzbd
---
apiVersion: v1
kind: Service
metadata:
  name: sabnzbd-https
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
spec:
  type: {{ .Values.sabnzbd.service.https.type }}
  ports:
    - port: {{ .Values.sabnzbd.service.https.port }}
      targetPort: {{ .Values.sabnzbd.container.port.https }}
      protocol: TCP
      name: sabnzbd-https
{{ if eq .Values.sabnzbd.service.http.type "NodePort" }}
      nodePort: {{ .Values.sabnzbd.service.http.nodePort }}
{{ end }}
  selector:
    app: sabnzbd
---
{{ if .Values.sabnzbd.service.http.extraLBService }}
apiVersion: v1
kind: Service
metadata:
  name: sabnzbd-lb
  {{- with .Values.sabnzbd.service.http.extraLBAnnotations }}
  annotations:
    {{- . | toYaml | nindent 4 }}
  {{- end }}
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
spec:
  type: LoadBalancer
  ports:
    - port: {{ .Values.sabnzbd.service.http.port }}
      targetPort: {{ .Values.sabnzbd.container.port.http }}
      protocol: TCP
      name: sabnzbd-http
  selector:
    app: sabnzbd
{{ end }}
---
{{ if .Values.sabnzbd.service.https.extraLBService }}
apiVersion: v1
kind: Service
metadata:
  name: sabnzbd-lb-https
  {{- with .Values.sabnzbd.service.https.extraLBAnnotations }}
  annotations:
    {{- . | toYaml | nindent 4 }}
  {{- end }}
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
spec:
  type: LoadBalancer
  ports:
    - port: {{ .Values.sabnzbd.service.https.port }}
      targetPort: {{ .Values.sabnzbd.container.port.https }}
      protocol: TCP
      name: sabnzbd-https
  selector:
    app: sabnzbd
    {{ end }}
---
### INGRESS
{{ if .Values.sabnzbd.ingress.enabled }}
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: sabnzbd
  labels:
    {{- include "k8s-mediaserver.labels" . | nindent 4 }}
  {{- with .Values.sabnzbd.ingress.annotations }}
  annotations:
    {{- toYaml . | nindent 4 }}
  {{- end }}
spec:
{{- if .Values.sabnzbd.ingress.tls.enabled }}
  tls:
    - hosts:
        - {{ .Values.general.ingress_host | quote }}
      secretName: {{ .Values.sabnzbd.ingress.tls.secretName }}
{{ end }}
  ingressClassName: {{ .Values.general.ingress.ingressClassName }}
  rules:
    - host: {{ .Values.general.ingress_host | quote }}
      http:
        paths:
          - path: {{ .Values.sabnzbd.ingress.path }}
            pathType: Prefix
            backend:
              service:
                name: sabnzbd
                port:
                  number: {{ .Values.sabnzbd.service.http.port }}
{{ if .Values.general.ingress.enableSubdomains }}
    - host: {{ printf "%s.%s" "sabnzbd" .Values.general.ingress_host | quote }}
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: sabnzbd
                port:
                  number: {{ .Values.sabnzbd.service.http.port }}
{{ end }}
{{ end }}
{{ end }}
